import json
geo = json.load(open('SIG.geojson', encoding = 'UTF-8'))

#행정 구역 코드 출력
geo['features'][0]['properties']

#위도, 경도 좌표 출력
geo['features'][0]['geometry']

import pandas as pd
df_pop = pd.read_csv('Population_SIG.csv')
df_pop.head()
df_pop.info()
df_pop['code'] = df_pop['code'].astype(str)
import folium
folium.Map(location = [35.95, 127.7], #지도 중심 좌표 
           zoom_start = 8) #확대 단계
           
#배경 지도 만들어서 저장
map_sig = folium.Map(location = [35.95, 127.7],
                     zoom_start = 8,
                     tiles = 'cartodbpositron')
map_sig

folium.Choropleth(
    geo_data = geo,
    data = df_pop,
    columns = ('code', 'pop'),
    key_on = 'feature.properties.SIG_CD') \
    .add_to(map_sig)
map_sig

bins = list(df_pop["pop"].quantile([0, 0.2, 0.4, 0.6, 0.8, 1]))
bins

#배경 지도 만들기
map_sig = folium.Map(location = [35.95, 127.7],
                     zoom_start = 8,
                     titles = 'cartodbpositron')
map_sig

#단계 구분도 만들기
folium.Choropleth(
    geo_data = geo,
    data = df_pop,
    columns = ('code', 'pop'),
    key_on = 'feature.properties.SIG_CD',
    fill_color = 'YlGnBu',
    fill_opacity = 1,
    line_opacity = 0.5,
    bins = bins) \
     .add_to(map_sig)
map_sig
